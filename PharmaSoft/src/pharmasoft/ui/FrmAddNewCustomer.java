/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmAddNewMember.java
 *
 * Created on Jul 16, 2011, 9:56:54 AM
 */
package pharmasoft.ui;



import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;

import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.SwingConstants;

import net.java.balloontip.BalloonTip;
import net.java.balloontip.BalloonTip.AttachLocation;
import net.java.balloontip.BalloonTip.Orientation;
import net.java.balloontip.styles.BalloonTipStyle;
import net.java.balloontip.styles.ModernBalloonStyle;
import pharmasoft.db.dao.CommonDAO;
import pharmasoft.db.model.Customer;
import pharmasoft.ui.util.UiSupliment;
import pharmasoft.util.RegularExpression;

public class FrmAddNewCustomer extends javax.swing.JInternalFrame {

    private int customerId;
    private CommonDAO commonDAO;
    private Dimension localFrm;
    
    // Variables declaration - do not modify                     
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClearE;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnExitE;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JPanel inner;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAddress1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblName4;
    private javax.swing.JLabel lblName5;
    private javax.swing.JLabel lblTelNo;
    private javax.swing.JLabel lblTelNo1;
    private javax.swing.JTextField txtAddLine1;
    private javax.swing.JTextField txtAddLine1E;
    private javax.swing.JTextField txtAddLine2;
    private javax.swing.JTextField txtAddLine2E;
    private javax.swing.JTextField txtAddLine3;
    private javax.swing.JTextField txtAddLine3E;
    private javax.swing.JTextField txtFirstName;
    public javax.swing.JTextField txtFirstNameE;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtLastNameE;
    private javax.swing.JTextField txtContactNo;
    public javax.swing.JTextField txtContactNoE;
    BalloonTip validationTip;
    // End of variables declaration  

    public int getCustomerId() {
        return customerId;
    }

    public void setCustomerId(int customerId) {
        this.customerId = customerId;
    }

    public FrmAddNewCustomer(Dimension innerPannel) {
        initComponents();
        commonDAO = new CommonDAO();
        localFrm = UiSupliment.getFormLocation(innerPannel, this.getSize());
        this.setClosable(true);
        this.setMaximizable(true);
        this.setResizable(true);
        this.setIconifiable(true);
        this.setLocation((int) localFrm.getWidth(), (int) localFrm.getHeight());
        this.setTitle("Add New Customers");
        this.txtFirstNameE.setBorder(BorderFactory.createLineBorder(Color.BLUE, 1));
        createEvents();

    }


	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        inner = new javax.swing.JPanel();
        lblAddress = new javax.swing.JLabel();
        txtContactNo = new javax.swing.JTextField();
        txtContactNo.setName("Contact Number");
        lblTelNo = new javax.swing.JLabel();
        txtAddLine1 = new javax.swing.JTextField();
        txtAddLine1.setName("Address Line 1");
        txtAddLine2 = new javax.swing.JTextField();
        txtAddLine3 = new javax.swing.JTextField();
        lblName2 = new javax.swing.JLabel();
        txtFirstName = new javax.swing.JTextField();
        txtFirstName.setName("First Name");
        lblName4 = new javax.swing.JLabel();
        lblName4.setText("Last Name");
        txtLastName = new javax.swing.JTextField();
        txtLastName.setName("Last Name");
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblAddress1 = new javax.swing.JLabel();
        txtContactNoE = new javax.swing.JTextField();
        txtContactNoE.setName("Contact Number");
        lblTelNo1 = new javax.swing.JLabel();
        txtAddLine1E = new javax.swing.JTextField();
        txtAddLine1E.setName("Address Line 1");
        txtAddLine2E = new javax.swing.JTextField();
        txtAddLine3E = new javax.swing.JTextField();
        lblName3 = new javax.swing.JLabel();
        txtFirstNameE = new javax.swing.JTextField();

        txtFirstNameE.setName("First Name");
        lblName5 = new javax.swing.JLabel();
        txtLastNameE = new javax.swing.JTextField();
        txtLastNameE.setName("Last Name");
        btnSearch = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnClearE = new javax.swing.JButton();
        btnExitE = new javax.swing.JButton();

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel2.setPreferredSize(new java.awt.Dimension(624, 500));
        inner.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        lblAddress.setText("Address");
        lblTelNo.setText("Contact No");
        lblName2.setText("First Name");
        lblAddress1.setText("Address");
        lblTelNo1.setText("Contact No");
        lblName3.setText("First Name");
        lblName5.setText("Last Name");

        javax.swing.GroupLayout gl_inner = new javax.swing.GroupLayout(inner);
        gl_inner.setHorizontalGroup(
        	gl_inner.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_inner.createSequentialGroup()
        			.addGap(24)
        			.addGroup(gl_inner.createParallelGroup(Alignment.LEADING)
        				.addComponent(lblName2)
        				.addGroup(gl_inner.createParallelGroup(Alignment.TRAILING)
        					.addComponent(lblAddress)
        					.addComponent(lblName4)
        					.addComponent(lblTelNo)))
        			.addGap(25)
        			.addGroup(gl_inner.createParallelGroup(Alignment.TRAILING)
        				.addComponent(txtContactNo, Alignment.LEADING, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
        				.addGroup(gl_inner.createSequentialGroup()
        					.addGroup(gl_inner.createParallelGroup(Alignment.LEADING)
        						.addComponent(txtAddLine3, GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        						.addComponent(txtAddLine2, GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        						.addComponent(txtAddLine1, GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
        						.addGroup(gl_inner.createParallelGroup(Alignment.TRAILING, false)
        							.addComponent(txtLastName, Alignment.LEADING)
        							.addComponent(txtFirstName, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 164, Short.MAX_VALUE)))
        					.addGap(281))))
        );
        gl_inner.setVerticalGroup(
        	gl_inner.createParallelGroup(Alignment.TRAILING)
        		.addGroup(gl_inner.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(gl_inner.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblName2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(txtFirstName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(14)
        			.addGroup(gl_inner.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblName4, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(txtLastName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(gl_inner.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblAddress, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        				.addComponent(txtAddLine1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(txtAddLine2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(txtAddLine3, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        			.addGap(14)
        			.addGroup(gl_inner.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtContactNo, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblTelNo))
        			.addGap(40))
        );
        gl_inner.linkSize(SwingConstants.VERTICAL, new Component[] {txtContactNo, txtAddLine1, txtAddLine2, txtAddLine3});
        inner.setLayout(gl_inner);

        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnExit.setText("Exit");
        btnExit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        
        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(inner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(192, 192, 192))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(btnExit, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        jTabbedPane1.addTab("Add", jPanel2);

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel4.setPreferredSize(new java.awt.Dimension(604, 236));

        btnSearch.setText("Search");
        btnSearch.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4Layout.setHorizontalGroup(
        	jPanel4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel4Layout.createSequentialGroup()
        			.addGap(24)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel4Layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(lblTelNo1, GroupLayout.PREFERRED_SIZE, 68, GroupLayout.PREFERRED_SIZE)
        					.addGap(18)
        					.addComponent(txtContactNoE, GroupLayout.PREFERRED_SIZE, 161, GroupLayout.PREFERRED_SIZE))
        				.addGroup(jPanel4Layout.createSequentialGroup()
        					.addGroup(jPanel4Layout.createParallelGroup(Alignment.TRAILING)
        						.addGroup(jPanel4Layout.createSequentialGroup()
        							.addGroup(jPanel4Layout.createParallelGroup(Alignment.TRAILING)
        								.addComponent(lblAddress1)
        								.addComponent(lblName5))
        							.addGap(22))
        						.addGroup(jPanel4Layout.createSequentialGroup()
        							.addComponent(lblName3)
        							.addGap(21)))
        					.addGroup(jPanel4Layout.createParallelGroup(Alignment.TRAILING, false)
        						.addComponent(txtAddLine3E, Alignment.LEADING)
        						.addGroup(Alignment.LEADING, jPanel4Layout.createParallelGroup(Alignment.LEADING, false)
        							.addComponent(txtAddLine1E, Alignment.TRAILING)
        							.addComponent(txtAddLine2E, Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE))
        						.addGroup(Alignment.LEADING, jPanel4Layout.createParallelGroup(Alignment.TRAILING, false)
        							.addComponent(txtLastNameE, Alignment.LEADING)
        							.addComponent(txtFirstNameE, Alignment.LEADING, GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)))
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btnSearch, GroupLayout.PREFERRED_SIZE, 73, GroupLayout.PREFERRED_SIZE)))
        			.addGap(229))
        );
        jPanel4Layout.setVerticalGroup(
        	jPanel4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel4Layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel4Layout.createSequentialGroup()
        					.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lblName3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        						.addComponent(txtFirstNameE, GroupLayout.PREFERRED_SIZE, 20, GroupLayout.PREFERRED_SIZE))
        					.addGap(14)
        					.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lblName5, GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE)
        						.addComponent(txtLastNameE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(txtAddLine1E, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        						.addComponent(lblAddress1, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        					.addPreferredGap(ComponentPlacement.UNRELATED)
        					.addComponent(txtAddLine2E, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        				.addGroup(jPanel4Layout.createSequentialGroup()
        					.addComponent(btnSearch, GroupLayout.PREFERRED_SIZE, 25, GroupLayout.PREFERRED_SIZE)
        					.addGap(104)))
        			.addGap(7)
        			.addComponent(txtAddLine3E, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtContactNoE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblTelNo1, GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE))
        			.addContainerGap())
        );
        jPanel4Layout.linkSize(SwingConstants.VERTICAL, new Component[] {txtContactNoE, txtAddLine1E, txtAddLine2E, txtAddLine3E, txtFirstNameE, txtLastNameE});
        jPanel4.setLayout(jPanel4Layout);

        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnClearE.setText("Clear");
        btnClearE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClearE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearEActionPerformed(evt);
            }
        });

        btnExitE.setText("Exit");
        btnExitE.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExitE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitEActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, 626, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnClearE, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExitE, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(184, 184, 184))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClearE, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                    .addComponent(btnExitE, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE))
                .addGap(45, 45, 45))
        );

        jTabbedPane1.addTab("Edit", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>       
    
    private void createEvents() {
    	
        txtFirstName.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtFirstName)) {
						txtFirstName.requestFocus();
						isErrored = true;
					} else {
						txtFirstName.setText(txtFirstName.getText().toUpperCase());
						txtLastName.requestFocus();
					}
				} else {
	               	if (validationTip != null && !isErrored)
	            		validationTip.closeBalloon();
				}
				
        	}
        });
        
        txtLastName.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtLastName)) {
						txtLastName.requestFocus();
						isErrored = true;
					} else {
						txtLastName.setText(txtLastName.getText().toUpperCase());
						txtAddLine1.requestFocus();
						isErrored = false;
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        });
        
        txtAddLine1.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtAddLine1)) {
						txtAddLine1.requestFocus();
						isErrored = true;
					} else {
						txtAddLine1.setText(txtAddLine1.getText().toUpperCase());
						txtAddLine2.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        });
        
        txtAddLine2.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtAddLine3.requestFocus();
        		}
        	}
        });

        txtAddLine3.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtContactNo.requestFocus();
        		}
        	}
        });
        
        txtContactNo.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtContactNo) || !validateTpTxtField(txtContactNo)) {
						txtContactNo.requestFocus();
						isErrored = true;
					} else {
						txtContactNo.setText(txtContactNo.getText().toUpperCase());
						btnAdd.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        });
        
        btnClear.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		frmSetClear();
        	}
        });
        
        btnExit.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		setVisible(false);
        	}
        });
        
		/////////////////////////////////////////////////////////////////////////// - EDIT VIEW HANDLERS - //////////////////////////////////////////////////////
		txtFirstNameE.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_F4) {
					getFrmSearchBox();
				} else if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtFirstNameE)) {
						txtFirstNameE.requestFocus();
						isErrored = true;
					} else {
						txtFirstNameE.setText(txtFirstNameE.getText().toUpperCase());
						txtLastNameE.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
			}
		});
		
	    txtFirstNameE.addFocusListener(new FocusAdapter() {
	        	@Override
	        	public void focusGained(FocusEvent evt) {
	    	        int cusId = getCustomerId();
	    	        Customer customer = commonDAO.getCustomerDetailsById(cusId);
	    	        if (customer != null) {
	    	            txtFirstNameE.setText(customer.getFirstName());
	    	            txtLastNameE.setText(customer.getLastName());
	    	            txtAddLine1E.setText(customer.getAddressLine1());
	    	            txtAddLine2E.setText(customer.getAddressLine2());
	    	            txtAddLine3E.setText(customer.getAddressLine3());
	    	            txtContactNoE.setText(customer.getPhone());
	    	        }
	        	}
	      });
	    
        txtLastNameE.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtLastNameE)) {
						txtLastNameE.requestFocus();
						isErrored = true;
					} else {
						txtLastNameE.setText(txtLastNameE.getText().toUpperCase());
						txtAddLine1E.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        	
        });
        
        txtAddLine1E.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtAddLine1E)) {
						txtAddLine1E.requestFocus();
						isErrored = true;
					} else {
						txtAddLine1E.setText(txtAddLine1E.getText().toUpperCase());
						txtAddLine2E.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        });
        
        txtAddLine2E.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtAddLine3E.requestFocus();
        		}
        	}
        });

        txtAddLine3E.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtContactNoE.requestFocus();
        		}
        	}
        });
        
        txtContactNoE.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtContactNoE) || !validateTpTxtField(txtContactNoE)) {
						txtContactNoE.requestFocus();
						isErrored = true;
					} else {
						txtContactNoE.setText(txtContactNoE.getText().toUpperCase());
						btnUpdate.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        });
	}
    
	private void btnExitEActionPerformed(java.awt.event.ActionEvent evt) {
		this.setVisible(false);
	}

	private void btnClearEActionPerformed(java.awt.event.ActionEvent evt) {
		this.frmEditSetClear();
	}

	private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {
		getFrmSearchBox();
	}
    
    private void getFrmSearchBox() {
		FrmSearchBox frmSearchBox = new FrmSearchBox(this);
		frmSearchBox.setValue("c.first_name", "customerSearch");
		frmSearchBox.setLocation((int) localFrm.getWidth(), (int) localFrm.getHeight());
		frmSearchBox.setVisible(true);
	}

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {   	
    	if (!validateAdd())
    		return;
    	
        int res = JOptionPane.showConfirmDialog(rootPane, "Do You Want To Add This Customer?", "Confirmation!", JOptionPane.YES_NO_OPTION);

        if (res == 0) {
            String cusFirstName = txtFirstName.getText();
            String cusLastName = txtLastName.getText();
            String address1 = txtAddLine1.getText();
            String address2 = txtAddLine2.getText();
            String address3 = txtAddLine3.getText();
            String teleNo = txtContactNo.getText();

            Customer customer = new Customer();
            customer.setFirstName(cusFirstName);
            customer.setLastName(cusLastName);
            customer.setAddressLine1(address1);
            customer.setAddressLine2(address2);
            customer.setAddressLine3(address3);
            customer.setPhone(teleNo);

            boolean flag = commonDAO.addNewCustomer(customer);
            if (flag) {
                JOptionPane.showConfirmDialog(rootPane, "Add New Customer Successfully!", 
                        "Success!", JOptionPane.CLOSED_OPTION);
                this.frmSetClear();
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Add New Customer Failed!", 
                        "Failed!", JOptionPane.CLOSED_OPTION);
            }

        }
    }     
    
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {                                          
    	if (!validateUpdate())
    		return;
    	
        int res = JOptionPane.showConfirmDialog(rootPane, "Do You Want To Update This Customer?", 
                "Confirmation!", JOptionPane.YES_NO_OPTION);

        if (res == 0) {
            String cusFirstName = txtFirstNameE.getText();
            String cusLastName = txtLastNameE.getText();
            String address1 = txtAddLine1E.getText();
            String address2 = txtAddLine2E.getText();
            String address3 = txtAddLine3E.getText();
            String teleNo = txtContactNoE.getText();
            String faxNo = txtContactNoE.getText();

            Customer customer = new Customer();
            customer.setFirstName(cusFirstName);
            customer.setLastName(cusLastName);
            customer.setAddressLine1(address1);
            customer.setAddressLine2(address2);
            customer.setAddressLine3(address3);
            customer.setPhone(teleNo);
            customer.setFax(faxNo);

            boolean flag = commonDAO.updateCustomer(customer, getCustomerId());
            if (flag) {
                JOptionPane.showConfirmDialog(rootPane, "Update Customer Success!", 
                        "Success!", JOptionPane.CLOSED_OPTION);
                this.frmEditSetClear();
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Update Customer Failed!", 
                        "Failed!", JOptionPane.CLOSED_OPTION);
            }

        }
    }
    
	public boolean validateAdd() {
		if (!validateTxtField(txtFirstName)) {
			txtFirstName.requestFocus();
			return false;
		} else if (!validateTxtField(txtLastName)) {
			txtLastName.requestFocus();
			return false;
		} else if (!validateTxtField(txtAddLine1)) {
			txtAddLine1.requestFocus();
			return false;
		} else if (!validateTxtField(txtContactNo) || !validateTpTxtField(txtContactNo)) {
			txtContactNo.requestFocus();
			return false;
		}
		return true;

	}
	
	public boolean validateUpdate() {
		if (!validateTxtField(txtFirstNameE)) {
			txtFirstNameE.requestFocus();
			return false;
		} else if (!validateTxtField(txtLastNameE)) {
			txtLastNameE.requestFocus();
			return false;
		} else if (!validateTxtField(txtAddLine1E)) {
			txtAddLine1.requestFocus();
			return false;
		} else if (!validateTxtField(txtContactNoE) || !validateTpTxtField(txtContactNoE)) {
			txtContactNo.requestFocus();
			return false;
		}
		return true;

	}

    private boolean validateTxtField(Component c) {   
    	JTextField txtField = (JTextField) c;
        BalloonTipStyle mordernLook = new ModernBalloonStyle(5, 5, Color.pink, Color.pink, Color.red);   
    	if (validationTip != null)
    		validationTip.closeBalloon();
    	
        if (txtField.getText().isEmpty()) {
        		validationTip = new BalloonTip(txtField, new JLabel(txtField.getName() + " Cannot be Empty."), 
        			mordernLook, Orientation.LEFT_ABOVE, AttachLocation.ALIGNED, 100, 20, false);
        	return false;
        } else {
//        	if (validationTip != null)
//        		validationTip.closeBalloon();
        	return true;
        }
     }  
    
    private boolean validateTpTxtField(Component c) {   
    	JTextField txtField = (JTextField) c;
        BalloonTipStyle mordernLook = new ModernBalloonStyle(5, 5, Color.pink, Color.pink, Color.red);    
        if (!txtField.getText().isEmpty() && !txtField.getText().matches(RegularExpression.RE_FRN_ADD_NEW_MEMBER_TPNO)) {
        	validationTip = new BalloonTip(txtField, new JLabel(txtField.getName() + " is invalid."), 
        			mordernLook, Orientation.LEFT_ABOVE, AttachLocation.ALIGNED, 100, 20, false);
        	return false;
        } else {
        	if (validationTip != null)
        		validationTip.closeBalloon();
        	return true;
        }
     }                                        

    private void frmSetClear() {
        txtContactNo.setText("");
        txtAddLine1.setText("");
        txtAddLine2.setText("");
        txtAddLine3.setText("");
        txtFirstName.setText("");
        txtLastName.setText("");
       	if (validationTip != null)
    		validationTip.closeBalloon();
        
    }

    private void frmEditSetClear() {
        txtFirstNameE.setText("");
        txtLastNameE.setText("");
        txtAddLine1E.setText("");
        txtAddLine2E.setText("");
        txtAddLine3E.setText("");
        txtContactNoE.setText("");
       	if (validationTip != null)
    		validationTip.closeBalloon();
    }
}

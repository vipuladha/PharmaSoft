/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmAddNewMember.java
 *
 * Created on Jul 16, 2011, 9:56:54 AM
 */
package pharmasoft.ui;

/**
 *
 * @author gayan
 */
//import PELAInvoice.db.member.MemberDAO;
////import PELAInvoice.dbConnection.MemberDAO;
//import PELAInvoice.db.member.Members;
//import PELAInvoice.ui.transaction.FrmMemberNumbers;
import pharmasoft.ui.util.UiSupliment;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

import pharmasoft.db.model.Supplier;
import pharmasoft.db.dao.CommonDAO;
import pharmasoft.util.RegularExpression;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JLabel;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;

import net.java.balloontip.BalloonTip;
import net.java.balloontip.BalloonTip.AttachLocation;
import net.java.balloontip.BalloonTip.Orientation;
import net.java.balloontip.styles.BalloonTipStyle;
import net.java.balloontip.styles.ModernBalloonStyle;

import java.awt.event.KeyAdapter;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.event.InternalFrameAdapter;
import javax.swing.event.InternalFrameEvent;

public class FrmAddNewSupplier extends javax.swing.JInternalFrame {

    /** Creates new form FrmAddNewMember */
//    public FrmAddNewMember() {
//        initComponents();
//    }
    private int supplierId;
    private CommonDAO commonDAO;
    Dimension localFrm;
    
    // Variables declaration - do not modify                     
    private javax.swing.JTextField txtAddLine1E;
    private javax.swing.JTextField txtAddLine2E;
    private javax.swing.JTextField txtAddLine3E;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnClear1;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAddress3;
    private javax.swing.JLabel lblContactPer;
    private javax.swing.JLabel lblContactPer1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblTelNo;
    private javax.swing.JLabel lblTelNo1;
    private javax.swing.JTextField txtAddLine1;
    private javax.swing.JTextField txtAddLine2;
    private javax.swing.JTextField txtAddLine3;
    private javax.swing.JTextField txtContactPerson;
    private javax.swing.JTextField txtContactPersonE;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEmailE;
    public javax.swing.JTextField txtSuppNameE;
    private javax.swing.JTextField txtSuppName;
    private javax.swing.JTextField txtTelNo;
    public javax.swing.JTextField txtTelNoE;
    BalloonTip validationTip;
    // End of variables declaration     

    public int getSupplierId() {
        return supplierId;
    }

    public void setSupplierId(int supplierId) {
        this.supplierId = supplierId;
    }
    
    public FrmAddNewSupplier(Dimension innerPannel) {
        initComponents();
        commonDAO = new CommonDAO();
        localFrm = UiSupliment.getFormLocation(innerPannel, this.getSize());
        this.setClosable(true);
        this.setMaximizable(true);
        this.setResizable(true);
        this.setIconifiable(true);
        this.setLocation((int) localFrm.getWidth(), (int) localFrm.getHeight());
        createEvents();

    }


	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        txtContactPerson = new javax.swing.JTextField();
        lblContactPer = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtTelNo = new javax.swing.JTextField();
        txtTelNo.setName("Contact Number");
        lblTelNo = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtAddLine1 = new javax.swing.JTextField();
        txtAddLine1.setName("Address Line1");
        txtAddLine2 = new javax.swing.JTextField();
        txtAddLine3 = new javax.swing.JTextField();
        lblName2 = new javax.swing.JLabel();
        txtSuppName = new javax.swing.JTextField();
        txtSuppName.setName("Supplier Name");
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        lblEmail1 = new javax.swing.JLabel();
        txtContactPersonE = new javax.swing.JTextField();
        lblContactPer1 = new javax.swing.JLabel();
        txtAddLine1E = new javax.swing.JTextField();
        txtAddLine1E.setName("Address Line1");
        txtAddLine3E = new javax.swing.JTextField();
        txtAddLine2E = new javax.swing.JTextField();
        txtTelNoE = new javax.swing.JTextField();
        txtTelNoE.setName("Contact Number");
        lblTelNo1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtSuppNameE = new javax.swing.JTextField();
        txtSuppNameE.setName("Supplier Name");
        txtEmailE = new javax.swing.JTextField();
        lblAddress3 = new javax.swing.JLabel();
        lblName3 = new javax.swing.JLabel();
        btnClear1 = new javax.swing.JButton();
        btnEdit1 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        lblContactPer.setText("Contact Person");
        lblAddress.setText("Address");
        lblTelNo.setText("Contact No");
        lblEmail.setText("Email");
        lblName2.setText("Supplier Name");

        setResizable(true);
        setTitle("Add New Suppliers");

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1Layout.setHorizontalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(31)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(lblTelNo)
        						.addComponent(lblAddress)
        						.addComponent(lblName2))
        					.addGap(18)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(txtTelNo, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
        						.addComponent(txtAddLine1, GroupLayout.PREFERRED_SIZE, 215, GroupLayout.PREFERRED_SIZE)
        						.addComponent(txtAddLine3, GroupLayout.PREFERRED_SIZE, 215, GroupLayout.PREFERRED_SIZE)
        						.addComponent(txtAddLine2, GroupLayout.PREFERRED_SIZE, 215, GroupLayout.PREFERRED_SIZE)
        						.addComponent(txtSuppName, GroupLayout.PREFERRED_SIZE, 331, GroupLayout.PREFERRED_SIZE)))
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(24)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        						.addComponent(lblEmail)
        						.addComponent(lblContactPer))
        					.addGap(18)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        						.addComponent(txtContactPerson, GroupLayout.PREFERRED_SIZE, 232, GroupLayout.PREFERRED_SIZE)
        						.addComponent(txtEmail, GroupLayout.PREFERRED_SIZE, 212, GroupLayout.PREFERRED_SIZE))))
        			.addContainerGap(135, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtSuppName, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblName2))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtAddLine1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblAddress))
        			.addPreferredGap(ComponentPlacement.RELATED)
        			.addComponent(txtAddLine2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addGap(11)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGap(38)
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        						.addComponent(lblTelNo)
        						.addComponent(txtTelNo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(txtAddLine3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(lblEmail)
        				.addComponent(txtEmail, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        			.addGap(17)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtContactPerson, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblContactPer))
        			.addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1.setLayout(jPanel1Layout);

        btnAdd.setText("Add");
        btnAdd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnClear.setText("Clear");
        btnClear.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnEdit.setText("Exit");
        btnEdit.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(186, Short.MAX_VALUE)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(154, 154, 154))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25))
        );

        jTabbedPane1.addTab("Add", jPanel2);
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lblEmail1.setText("Email");
        lblContactPer1.setText("Contact Person");
        lblTelNo1.setText("Contact No");
        lblAddress3.setText("Address");
        lblName3.setText("Supplier Name");

        jButton1.setText("Browse");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });


        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4Layout.setHorizontalGroup(
        	jPanel4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel4Layout.createSequentialGroup()
        			.addGap(31)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.TRAILING)
        				.addComponent(lblAddress3)
        				.addComponent(lblName3)
        				.addComponent(lblTelNo1)
        				.addComponent(lblEmail1)
        				.addComponent(lblContactPer1))
        			.addGap(18)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.LEADING)
        				.addComponent(txtAddLine3E, GroupLayout.PREFERRED_SIZE, 215, GroupLayout.PREFERRED_SIZE)
        				.addComponent(txtAddLine2E, GroupLayout.PREFERRED_SIZE, 215, GroupLayout.PREFERRED_SIZE)
        				.addComponent(txtAddLine1E, GroupLayout.PREFERRED_SIZE, 215, GroupLayout.PREFERRED_SIZE)
        				.addGroup(jPanel4Layout.createSequentialGroup()
        					.addComponent(txtSuppNameE, GroupLayout.PREFERRED_SIZE, 275, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jButton1, GroupLayout.PREFERRED_SIZE, 61, GroupLayout.PREFERRED_SIZE))
        				.addComponent(txtEmailE, GroupLayout.PREFERRED_SIZE, 212, GroupLayout.PREFERRED_SIZE)
        				.addComponent(txtTelNoE, GroupLayout.PREFERRED_SIZE, 148, GroupLayout.PREFERRED_SIZE)
        				.addComponent(txtContactPersonE, GroupLayout.PREFERRED_SIZE, 233, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(124, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
        	jPanel4Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel4Layout.createSequentialGroup()
        			.addContainerGap()
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtSuppNameE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblName3)
        				.addComponent(jButton1))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtAddLine1E, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblAddress3))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(txtAddLine2E, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addComponent(txtAddLine3E, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtTelNoE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblTelNo1))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtEmailE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblEmail1))
        			.addPreferredGap(ComponentPlacement.UNRELATED)
        			.addGroup(jPanel4Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(txtContactPersonE, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(lblContactPer1))
        			.addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel4.setLayout(jPanel4Layout);

        btnClear1.setText("Clear");
        btnClear1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnClear1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClear1ActionPerformed(evt);
            }
        });

        btnEdit1.setText("Exit");
        btnEdit1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(193, Short.MAX_VALUE)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(157, 157, 157))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnClear1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEdit1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49))
        );

        jTabbedPane1.addTab("Edit", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void createEvents() {
        txtSuppName.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtSuppName)) {
						txtSuppName.requestFocus();
						isErrored = true;
					} else {
						txtSuppName.setText(txtSuppName.getText().toUpperCase());
						txtAddLine1.requestFocus();
					}
				} else {
	               	if (validationTip != null && !isErrored)
	            		validationTip.closeBalloon();
				}
				
        	}
        	
        });
        
        txtAddLine1.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtAddLine1)) {
						txtAddLine1.requestFocus();
						isErrored = true;
					} else {
						txtAddLine1.setText(txtAddLine1.getText().toUpperCase());
						txtAddLine2.requestFocus();
					}
				} else {
	               	if (validationTip != null && !isErrored)
	            		validationTip.closeBalloon();
				}
        	}
        });
        
        txtAddLine2.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtAddLine3.requestFocus();
        		}
        	}
        });
        
        txtAddLine3.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtTelNo.requestFocus();
        		}
        	}
        });
        
        txtTelNo.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtTelNo) || !validateTpTxtField(txtTelNo)) {
						txtTelNo.requestFocus();
						isErrored = true;
					} else {
						txtTelNo.setText(txtTelNo.getText().toUpperCase());
						txtEmail.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        });
        
        txtEmail.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtContactPerson.requestFocus();
        		}
        	}
        });
        
        txtContactPerson.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			btnAdd.requestFocus();
        		}
        	}
        });
        
        txtSuppNameE.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtSuppNameE)) {
						txtSuppNameE.requestFocus();
						isErrored = true;
					} else {
						txtSuppNameE.setText(txtSuppNameE.getText().toUpperCase());
						txtAddLine1E.requestFocus();
					}
				} else {
	               	if (validationTip != null && !isErrored)
	            		validationTip.closeBalloon();
				}
        	}
        });
        
        txtAddLine1E.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtAddLine1E)) {
						txtAddLine1E.requestFocus();
						isErrored = true;
					} else {
						txtAddLine1E.setText(txtAddLine1E.getText().toUpperCase());
						txtAddLine2E.requestFocus();
					}
				} else {
	               	if (validationTip != null && !isErrored)
	            		validationTip.closeBalloon();
				}
        	}
        });
        
        txtAddLine2E.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtAddLine3.requestFocus();
        		}
        	}
        });
        
        txtAddLine3E.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtTelNoE.requestFocus();
        		}
        	}
        });
        
        txtTelNoE.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		boolean isErrored = false;
				if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
					if (!validateTxtField(txtTelNoE) || !validateTpTxtField(txtTelNoE)) {
						txtTelNoE.requestFocus();
						isErrored = true;
					} else {
						txtTelNoE.setText(txtTelNoE.getText().toUpperCase());
						btnAdd.requestFocus();
					}
				}
				
               	if (validationTip != null && !isErrored)
            		validationTip.closeBalloon();
        	}
        });
        
        txtEmailE.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			txtContactPerson.requestFocus();
        		}
        	}
        });
        
        txtContactPersonE.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent evt) {
        		if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
        			btnAdd.requestFocus();
        		}
        	}
        });
        
        btnAdd.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent arg0) {
        		addNewSupplier();
        	}
        });
        
        btnAdd.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent e) {
        		addNewSupplier();
        	}
        });
        
        btnUpdate.addActionListener(new ActionListener() {
        	public void actionPerformed(ActionEvent e) {
        		updateSupplierDetail();
        	}
        });
        
        btnUpdate.addKeyListener(new KeyAdapter() {
        	@Override
        	public void keyPressed(KeyEvent e) {
        		updateSupplierDetail();
        	}
        });
		
	}
    
    private boolean validateTxtField(Component c) {   
    	JTextField txtField = (JTextField) c;
        BalloonTipStyle mordernLook = new ModernBalloonStyle(5, 5, Color.pink, Color.pink, Color.red);   
    	if (validationTip != null)
    		validationTip.closeBalloon();
    	
        if (txtField.getText().isEmpty()) {
        		validationTip = new BalloonTip(txtField, new JLabel(txtField.getName() + " Cannot be Empty."), 
        			mordernLook, Orientation.LEFT_ABOVE, AttachLocation.ALIGNED, 100, 20, false);
        	return false;
        } else {
        	return true;
        }
     }  
    
    private boolean validateTpTxtField(Component c) {   
    	JTextField txtField = (JTextField) c;
        BalloonTipStyle mordernLook = new ModernBalloonStyle(5, 5, Color.pink, Color.pink, Color.red);    
        if (!txtField.getText().isEmpty() && !txtField.getText().matches(RegularExpression.RE_FRN_ADD_NEW_MEMBER_TPNO)) {
        	validationTip = new BalloonTip(txtField, new JLabel(txtField.getName() + " is invalid."), 
        			mordernLook, Orientation.LEFT_ABOVE, AttachLocation.ALIGNED, 100, 20, false);
        	return false;
        } else {
        	if (validationTip != null)
        		validationTip.closeBalloon();
        	return true;
        }
     }  

    private void addNewSupplier() {     
    	if (!validateAdd())
    		return;
        
        int res = JOptionPane.showConfirmDialog(rootPane, "Do You Want To Add This Supplier?", "Confirmation!", JOptionPane.YES_NO_OPTION);

        if (res == 0) {
            String supplierName = txtSuppName.getText();
            String address1 = txtAddLine1.getText();
            String address2 = txtAddLine2.getText();
            String address3 = txtAddLine3.getText();
            String teleNo = txtTelNo.getText();
            String eMail = txtEmail.getText();
            String conPerson = txtContactPerson.getText();

            Supplier supplier = new Supplier();
            supplier.setSupplierName(supplierName);
            supplier.setAddressLine1(address1);
            supplier.setAddressLine2(address2);
            supplier.setAddressLine3(address3);
            supplier.setPhone(teleNo);


            CommonDAO systemDAO = new CommonDAO();
            boolean flag = systemDAO.addNewSupplier(supplier);
            if (flag) {
                JOptionPane.showConfirmDialog(rootPane, "Add New Supplier Successfully!", "Success!", JOptionPane.CLOSED_OPTION);
                this.frmSetClear();
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Add New Supplier Failed!", "Failed!", JOptionPane.CLOSED_OPTION);
            }

        }

    }   
    
	public boolean validateAdd() {
		if (!validateTxtField(txtSuppName)) {
			txtSuppName.requestFocus();
			return false;
		}  else if (!validateTxtField(txtAddLine1)) {
			txtAddLine1.requestFocus();
			return false;
		} else if (!validateTxtField(txtTelNo) || !validateTpTxtField(txtTelNo)) {
			txtTelNo.requestFocus();
			return false;
		}
		return true;

	}
	
	public boolean validateUpdate() {
		if (!validateTxtField(txtSuppNameE)) {
			txtSuppNameE.requestFocus();
			return false;
		} else if (!validateTxtField(txtAddLine1E)) {
			txtAddLine1.requestFocus();
			return false;
		} else if (!validateTxtField(txtTelNoE) || !validateTpTxtField(txtTelNoE)) {
			txtTelNoE.requestFocus();
			return false;
		}
		return true;

	}

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {                                         
        this.frmSetClear();
}                                        

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        this.setVisible(false);
}                                       

    private void updateSupplierDetail() { 
    	if (!validateUpdate())
    		return;
    	
        int res = JOptionPane.showConfirmDialog(rootPane, "Do You Want To Update This Supplier?", "Confirmation!", JOptionPane.YES_NO_OPTION);

        if (res == 0) {

            String supplierName = txtSuppNameE.getText();
            String address1 = txtAddLine1E.getText();
            String address2 = txtAddLine2.getText();
            String address3 = txtAddLine3.getText();
            String teleNo = txtTelNoE.getText();
            String eMail = txtEmail.getText();
            String conPerson = txtContactPerson.getText();

            Supplier supplier = new Supplier();
            supplier.setSupplierName(supplierName);
            supplier.setAddressLine1(address1);
            supplier.setAddressLine2(address2);
            supplier.setAddressLine3(address3);
            supplier.setPhone(teleNo);

            CommonDAO commonDAO = new CommonDAO();
            boolean flag = commonDAO.updateSupplier(supplier, getSupplierId());
            if (flag) {
                JOptionPane.showConfirmDialog(rootPane, "Update Supplier Success!", "Success!", JOptionPane.CLOSED_OPTION);
                //this.frmEditClear();
            } else {
                JOptionPane.showConfirmDialog(rootPane, "Update Supplier Failed!", "Failed!", JOptionPane.CLOSED_OPTION);
            }
        }

    }                                         

    private void btnClear1ActionPerformed(java.awt.event.ActionEvent evt) {                                          
        txtSuppNameE.setText("");
        txtAddLine1E.setText("");
        txtAddLine2E.setText("");
        txtSuppName.setText("");
        txtTelNoE.setText("");
        txtEmailE.setText("");
        txtContactPersonE.setText("");
    }                                         

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        this.setVisible(false);
    }                                        

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        FrmSearchBox frmSearchBox = new FrmSearchBox(this);
        frmSearchBox.setValue("s.supplier_name", "supplierSearch");
		frmSearchBox.setLocation((int) localFrm.getWidth(), (int) localFrm.getHeight());
		frmSearchBox.setVisible(true);

    }                                        

    private void frmSetClear() {
        txtContactPerson.setText("");
        txtEmail.setText("");
        txtTelNo.setText("");
        txtAddLine1.setText("");
        txtAddLine2.setText("");
        txtAddLine3.setText("");
        txtSuppName.setText("");
    }

    private void frmEditSetClear() {
        txtSuppNameE.setText("");
        txtAddLine1E.setText("");
        txtAddLine2E.setText("");
        txtSuppName.setText("");
        txtTelNoE.setText("");
        txtEmailE.setText("");
        txtContactPersonE.setText("");
    }
}
